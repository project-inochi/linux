/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
/*
 * Copyright (c) 2024 Inochi Amaoto <inochiama@outlook.com>
 */

#ifndef _UAPI_CV1800_TPU_ACCEL_H_
#define _UAPI_CV1800_TPU_ACCEL_H_

#include "drm.h"

#if defined(__cplusplus)
extern "C" {
#endif

#define DRM_CV1800_TPU_SUBMIT			0x00
#define DRM_CV1800_TPU_WAIT			0x01
#define DRM_CV1800_TPU_FLUSH			0x02
#define DRM_CV1800_TPU_INVALID			0x03
#define DRM_CV1800_TPU_FLUSH_FD			0x04
#define DRM_CV1800_TPU_INVALID_FD		0x05

#define DRM_IOCTL_CV1800_TPU_SUBMIT \
	DRM_IOW(DRM_COMMAND_BASE + DRM_CV1800_TPU_SUBMIT, void *)
#define DRM_IOCTL_CV1800_TPU_WAIT \
	DRM_IOWR(DRM_COMMAND_BASE + DRM_CV1800_TPU_WAIT, void *)
#define DRM_IOCTL_CV1800_TPU_FLUSH \
	DRM_IOW(DRM_COMMAND_BASE + DRM_CV1800_TPU_FLUSH, void *)
#define DRM_IOCTL_CV1800_TPU_INVLD \
	DRM_IOW(DRM_COMMAND_BASE + DRM_CV1800_TPU_INVALID, void *)

#define DRM_IOCTL_CV1800_TPU_DMABUF_FLUSH_FD \
	DRM_IOW(DRM_COMMAND_BASE + DRM_CV1800_TPU_FLUSH_FD, void *)
#define DRM_IOCTL_CV1800_TPU_DMABUF_INVLD_FD \
	DRM_IOW(DRM_COMMAND_BASE + DRM_CV1800_TPU_INVALID_FD, void *)

#define DRM_IOCTL_CV1800_TPU_LOAD_TEE \
	DRM_IOWR(DRM_COMMAND_BASE + 0x08, void *)
#define DRM_IOCTL_CV1800_TPU_SUBMIT_TEE \
	DRM_IOW(DRM_COMMAND_BASE + 0x09, void *)
#define DRM_IOCTL_CV1800_TPU_UNLOAD_TEE \
	DRM_IOW(DRM_COMMAND_BASE + 0x0A, void *)

#define DRM_IOCTL_CV1800_TPU_SUBMIT_PIO \
	DRM_IOW(DRM_COMMAND_BASE + 0x0B, void *)
#define DRM_IOCTL_CV1800_TPU_WAIT_PIO \
	DRM_IOWR(DRM_COMMAND_BASE + 0x0C, void *)
#define DRM_IOCTL_CV1800_TPU_PIO_MODE \
	DRM_IOW(DRM_COMMAND_BASE + 0x07, void *)

#define DRM_IOCTL_CV1800_TPU_GET_USAGE \
	DRM_IOWR(DRM_COMMAND_BASE + 0x0D, void *)

#if defined(__cplusplus)
}
#endif

#endif /* _UAPI_CV1800_TPU_ACCEL_H_ */
